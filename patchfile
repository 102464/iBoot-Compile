diff -ruN iBoot Source Code/Makefile ../iBoot Source Code/Makefile
--- iBoot Source Code/Makefile	2017-09-22 14:14:12.000000000 -0700
+++ ../iBoot Source Code/Makefile	2020-02-10 20:31:03.000000000 -0800
@@ -34,7 +34,7 @@
 
 # Default SDK platform
 ifeq ($(BUILD_OS),darwin)
-export SDK_PLATFORM	?=	iphoneos.internal
+export SDK_PLATFORM	?=	iphoneos
  ifeq ($(SDKROOT),)
   SDKROOT_PATH		:=	$(shell xcodebuild -version -sdk $(SDK_PLATFORM) Path)
   export SDKROOT	:=	$(SDKROOT_PATH)
diff -ruN iBoot Source Code/drivers/flash_nand/ppn-swiss/ppn.c ../iBoot Source Code/drivers/flash_nand/ppn-swiss/ppn.c
--- iBoot Source Code/drivers/flash_nand/ppn-swiss/ppn.c	2017-09-22 14:14:12.000000000 -0700
+++ ../iBoot Source Code/drivers/flash_nand/ppn-swiss/ppn.c	2020-02-10 20:47:02.000000000 -0800
@@ -40,7 +40,7 @@
 		//err = FTL_Read(block, count, ptr);
 	
 		if (err != FIL_SUCCESS) {
-			printf("nand_read_block_hook: failure %d reading block %u, count %zd\n", err, block, count);
+			printf("nand_read_block_hook: failure %d reading block %u, count %u\n", err, block, count);
 			return -1;
 		}
 	}
diff -ruN iBoot Source Code/lib/fs/fs.c ../iBoot Source Code/lib/fs/fs.c
--- iBoot Source Code/lib/fs/fs.c	2017-09-22 14:14:12.000000000 -0700
+++ ../iBoot Source Code/lib/fs/fs.c	2020-02-10 20:48:55.000000000 -0800
@@ -392,7 +392,7 @@
 	if (result < 0 || (unsigned)result != stat.st_size) {
 		platform_record_breadcrumb("fs_load_file", "read_failed");
 		// Zero the buffer in case of a partial read
-		memset((void *)addr, *maxsize, 0);
+		memset((void *)addr, *maxsize, (0));
 
 		return -1;
 	}
diff -ruN iBoot Source Code/makefiles/build.mk ../iBoot Source Code/makefiles/build.mk
--- iBoot Source Code/makefiles/build.mk	2017-09-22 14:14:12.000000000 -0700
+++ ../iBoot Source Code/makefiles/build.mk	2020-02-10 20:51:57.000000000 -0800
@@ -22,7 +22,7 @@
 _CPPFLAGS		:=	$(GLOBAL_CFLAGS) $(CPPEXTRAFLAGS) $(CPPWARNFLAGS)
 
 # extra flags to bring in the compiler runtime, since we turn it off via -nodefaultlibs
-_RUNTIME_FLAGS		:=	-L$(SDKROOT)/usr/local/lib -lcompiler_rt-static $(LIBBUILTIN_BUILD)
+_RUNTIME_FLAGS		:=	-L$(SDKROOT)/usr/local/lib $(LIBBUILTIN_BUILD)
 
 # produce coverage info, but don't add profiling into the built binaries
 # this lets us compare coverage from unit tests to the lines built for real targets
diff -ruN iBoot Source Code/makefiles/config.mk ../iBoot Source Code/makefiles/config.mk
--- iBoot Source Code/makefiles/config.mk	2017-09-22 14:14:12.000000000 -0700
+++ ../iBoot Source Code/makefiles/config.mk	2020-02-10 20:43:24.000000000 -0800
@@ -24,13 +24,13 @@
 # Use latest compiler runtime.
 ifneq ($(RC_XBS), YES)
 ifeq ($(SDK_PRODUCT_NAME),Watch OS)
-DEPLOYMENT_TARGET_FLAGS	=	-mwatchos-version-min=$(SDKVERSION)
+DEPLOYMENT_TARGET_FLAGS	=	-mwatchos-version-min=10.0 
 else
 ifeq ($(SDK_PRODUCT_NAME),Apple TVOS)
-DEPLOYMENT_TARGET_FLAGS	=	-mtvos-version-min=$(SDKVERSION)
+DEPLOYMENT_TARGET_FLAGS	=	-mtvos-version-min=10.0 
 else
 ifeq ($(SDK_PRODUCT_NAME),iPhone OS)
-DEPLOYMENT_TARGET_FLAGS	=	-miphoneos-version-min=$(SDKVERSION)
+DEPLOYMENT_TARGET_FLAGS	=	-miphoneos-version-min=10.0 
 endif
 endif
 endif
diff -ruN iBoot Source Code/makefiles/tools.mk ../iBoot Source Code/makefiles/tools.mk
--- iBoot Source Code/makefiles/tools.mk	2017-09-22 14:14:12.000000000 -0700
+++ ../iBoot Source Code/makefiles/tools.mk	2020-02-10 20:57:06.000000000 -0800
@@ -46,7 +46,7 @@
 export SIZE		:=	$(shell xcrun -sdk $(SDKROOT) -find size)
 export STRIP		:=	$(shell xcrun -sdk $(SDKROOT) -find strip)
 export IMAGE3MAKER	:=	$(shell xcrun -sdk $(SDKROOT) -find image3maker)
-export IMG4PAYLOAD	:=	$(shell xcrun -sdk $(SDKROOT) -find img4payload)
+export IMG4PAYLOAD	:=	/usr/local/bin/img4
 export AR		:=	$(shell xcrun -sdk $(SDKROOT) -find ar)
 export NM		:=	$(shell xcrun -sdk $(SDKROOT) -find nm)
 export RANLIB		:=	$(shell xcrun -sdk $(SDKROOT) -find ranlib)
Binary files iBoot Source Code/tools/macho.pyc and ../iBoot Source Code/tools/macho.pyc differ
